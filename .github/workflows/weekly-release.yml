name: Weekly Release

permissions:
  contents: write

on:
  schedule:
    - cron: '0 0 * * 0' # Runs at 00:00 every Sunday
  workflow_dispatch:

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository with submodules
      uses: actions/checkout@v3
      with:
        submodules: 'recursive'

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Run YARA-Forge
      run: |
        python yara-forge.py

    - name: Get current date
      run: echo "CURRENT_DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV
      shell: bash

    - name: Zip and upload packages
      run: |
        for folder in packages/*; do
          if [ -d "$folder" ]; then
            foldername=$(basename "$folder")
            zipfile="${foldername}-${{ env.CURRENT_DATE }}.zip"
            zip -r "$zipfile" "$folder"
            echo "::set-output name=${foldername}_zip_path::$zipfile"
          fi
        done
      id: zip_files
      shell: bash

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.CURRENT_DATE }}
        release_name: Release ${{ env.CURRENT_DATE }}
        body: This release contains the latest YARA rule sets from YARA Forge.
        draft: false
        prerelease: false

    - name: Upload core asset
      if: always()
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./core-${{ env.CURRENT_DATE }}.zip
        asset_name: core-${{ env.CURRENT_DATE }}.zip
        asset_content_type: application/zip

    - name: Upload extended asset
      if: always()
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./extended-${{ env.CURRENT_DATE }}.zip
        asset_name: extended-${{ env.CURRENT_DATE }}.zip
        asset_content_type: application/zip

    - name: Upload full asset
      if: always()
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./full-${{ env.CURRENT_DATE }}.zip
        asset_name: full-${{ env.CURRENT_DATE }}.zip
        asset_content_type: application/zip
